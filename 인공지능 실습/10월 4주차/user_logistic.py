# -*- coding: utf-8 -*-
"""User_logistic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10oIEChiMx6zxg4i78QT7B2o8Ztwjr5OX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# https://drive.google.com/file/d/1Upqoz2gIAYq6LByD7YjHU-9_9K4EOhOh/view
dataset = pd.read_csv("User_Data.csv")

x=dataset.iloc[:,[2,3]].values # 입력
y=dataset.iloc[:, 4].values    # 출력

from sklearn.model_selection import train_test_split
# 훈련데이터와 검증데이터를 75:25비율로 나눈다.
xtrain, xtest, ytrain, ytest = train_test_split(x,y,test_size = 0.25, random_state = 0)

from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
# 전처리
xtrain = sc_x.fit_transform(xtrain)
xtest = sc_x.fit_transform(xtest)
print(xtrain[0:10, :])

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0)
classifier.fit(xtrain, ytrain)     # 훈련데이터로 모델을 학습한다.
y_pred = classifier.predict(xtest) # 검증데이터로 예측

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(ytest, y_pred)
print("혼동행렬 : \n", cm)

from sklearn.metrics import accuracy_score
print("정확도 : ", accuracy_score(ytest, y_pred)) # 검증데이터의 값과 예측 값을 비교한다.

from matplotlib.colors import ListedColormap
X_set, y_set = xtest, ytest
X1, X2 = np.meshgrid(np.arange(start = X_set[:,0].min()-1,
                               stop = X_set[:,0].max()+1, step=0.01),
                     np.arange(start = X_set[:,1].min()-1,
                               stop = X_set[:,1].max()+1, step=0.01))

plt.contourf(X1,X2,classifier.predict(
        np.array([X1.ravel(), X2.ravel()]).T).reshape(
        X1.shape), alpha = 0.75, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(),X1.max())
plt.xlim(X2.min(),X2.max())

for i, j in enumerate(np.unique(y_set)):
  plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
              c = ListedColormap(('red', 'green'))(i), label = j)
  
plt.title('Classifier(Test set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show()