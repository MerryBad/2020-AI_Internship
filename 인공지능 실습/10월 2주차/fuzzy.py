# -*- coding: utf-8 -*-
"""fuzzy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZrSm9VxWoImw6V5c1RcwNNHb7hkp7G3K
"""

!pip install scikit-fuzzy

import skfuzzy as fuzz
import numpy as np
import matplotlib.pyplot as plt

x_qual = np.arange(0,11,1)
x_serv = np.arange(0,11,0.2)
x_tip = np.arange(0,31,3)

qual_poor = fuzz.trapmf(x_qual, [0,0,1,3])
qual_amazing = fuzz.trapmf(x_qual, [7,9,10,10])

serv_poor = fuzz.gaussmf(x_serv,0,1)
serv_acceptable = fuzz.gaussmf(x_serv, 5, 1)
serv_amazing = fuzz.gaussmf(x_serv, 10, 1)

tip_low = fuzz.trimf(x_tip, [0,5,10])
tip_medium = fuzz.trimf(x_tip, [10,15,20])
tip_high = fuzz.trimf(x_tip, [20,25,30])

fig, (ax0, ax1, ax2) = plt.subplots(nrows=3, figsize=(8,9))

ax0.plot(x_qual, qual_poor, 'b', linewidth=1.5, label='Poor')
ax0.plot(x_qual, qual_amazing, 'r', linewidth=1.5, label='Amazing')
ax0.set_title('Food quality')
ax0.legend()

ax1.plot(x_serv, serv_poor, 'b', linewidth=1.5, label='Poor')
ax1.plot(x_serv, serv_acceptable, 'g', linewidth=1.5, label='Acceptable')
ax1.plot(x_serv, serv_amazing, 'r', linewidth=1.5, label='Amazing')
ax1.set_title('Service quality')
ax1.legend()

ax2.plot(x_tip, tip_low, 'b', linewidth=1.5, label='Low')
ax2.plot(x_tip, tip_medium, 'g', linewidth=1.5, label='Medium')
ax2.plot(x_tip, tip_high, 'r', linewidth=1.5, label='High')
ax2.set_title('Tip amount')
ax2.legend()

for ax in (ax0, ax1, ax2):
  ax.spines['top'].set_visible(False)
  ax.spines['right'].set_visible(False)
  ax.get_xaxis().tick_bottom()
  ax.get_yaxis().tick_left()

plt.tight_layout()

def membership(domain, mf, val):
  return fuzz.interp_membership(domain, mf, val)

def compute_tip_amount(qual_val, serv_val):
  qual_level_poor = fuzz.interp_membership(x_qual, qual_poor, qual_val)
  qual_level_amazing = fuzz.interp_membership(x_qual, qual_amazing, qual_val)

  serv_level_poor = fuzz.interp_membership(x_serv, serv_poor, serv_val)
  serv_level_acceptable = fuzz.interp_membership(x_serv, serv_acceptable, serv_val)
  serv_level_amazing = fuzz.interp_membership(x_serv, serv_amazing, serv_val)
  
  satisfaction_rule1 = np.fmax(qual_level_poor, serv_level_poor)
  tip_activation_low = np.fmin(satisfaction_rule1, tip_low)

  tip_activation_medium = np.fmin(serv_level_acceptable, tip_medium)

  satisfaction_rule3 = np.fmax(qual_level_amazing, serv_level_amazing)
  tip_activation_high = np.fmin(satisfaction_rule3, tip_high)
  tip0 = np.zeros_like(x_tip)

  aggregated = np.fmax(tip_activation_low, np.fmax(tip_activation_medium, tip_activation_high))

  tip = fuzz.defuzz(x_tip, aggregated, 'centroid')
  return tip

print('food quality score = 6.6, service score = 9일 때 팁: ', compute_tip_amount(6.6,9))

from mpl_toolkits import mplot3d
import matplotlib.pyplot as plt

d_qual = np.arange(0,10,0.5)
d_serv = np.arange(0,10,0.5)

Q, S = np.meshgrid(d_qual, d_serv)
T = np.zeros_like(Q)

for i in range(20):
  for j in range(20):
    T[i,j] = compute_tip_amount(Q[i,j], S[i,j])

fig = plt.figure(figsize = (14,10))
ax = plt.axes(projection = '3d')
ax.plot_surface(Q, S, T, rstride=1, cstride=1, cmap='viridis', linewidth=0.4, antialiased=True)

ax.set_xlabel('food quality')
ax.set_xlim(0,10)
ax.set_ylabel('service')
ax.set_ylim(0,10)
ax.set_zlabel('tip')
ax.set_zlim(0,30)
ax.set_title('fuzzy inference-based tip computation')

plt.show()

